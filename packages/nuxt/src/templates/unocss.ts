import type { NuxtTemplate } from 'nuxt/schema'
import type { WemeThemeDefinition } from '../runtime/types'

export function createUnoCssConfig(
  prefix: string,
  reset: boolean,
  background: { light: string, dark: string },
  accentColors?: Record<string, string>,
  neutralColors?: Record<string, string>,
  themes?: WemeThemeDefinition[],
): NuxtTemplate {
  return {
    filename: 'uno.config.ts',
    getContents() {
      return `// GENERATED BY @weme-ui/nuxt
import { defineConfig, presetWind4, transformerVariantGroup } from 'unocss'
import { presetWemeUI } from '@weme-ui/unocss-preset'

export default defineConfig({
  presets: [
    presetWind4({
      arbitraryVariants: true,
      preflights: {
        reset: ${JSON.stringify(reset)},
      },
    }),

    presetWemeUI({
      prefix: ${JSON.stringify(prefix)},
      reset: ${JSON.stringify(reset)},
      background: ${JSON.stringify(background, null, 2)},
      accentColors: ${JSON.stringify(accentColors || {}, null, 2)},
      neutralColors: ${JSON.stringify(neutralColors || {}, null, 2)},
      injectDefaultThemes: ${themes && themes.length ? 'false' : 'true'},
      themes: ${JSON.stringify(themes || [], null, 2)},

      // TODO: Support CSS variables
      // ?1. run cli add component
      // ?2. write css vars to component.json from registry.json
      // ?3. read and generate uno.config.ts
    }),
  ],

  transformers: [
    transformerVariantGroup(),
  ],

  content: {
    pipeline: {
      include: [
        /\\.(vue|svelte|[jt]sx|style\\.[jt]s|vine\\.[jt]s|mdx?|astro|elm|php|phtml|html)($|\\?)/,
        /styles?\\.[jt]s($|\\?)/,
      ],
    },
  },
})
`
    },
    write: true,
  }
}
